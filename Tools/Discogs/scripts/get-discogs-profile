#!/bin/bash
#
# get-discogs-value
#
# Get the estimated value of your Discogs collection
#
# Set your Discogs username and API token in ~/.config/mpprc as:
# DISCOGS_USER and DISCOGS_TOKEN
# Alternately, they can be provided on the command line or set here.
#
#-----------SET DISCOGS USERNAME-----------------------
DISCOGS_USER=
#
# Discogs API token
# See https://www.discogs.com/settings/developers
# API requests are throttled to 60 per minute for authenticated
# requests and 25 per minute for unauthenticated requests.
#
#-----------SET DISCOGS API TOKEN-----------------------
DISCOGS_TOKEN=
#
# A Discogs username is required.
#
# A Discogs API token is not required. However, API requests for
# unauthenticated users are throttled to 25 per minute and images
# are not available to unauthenticated users.

# Dot in the user configuration file if it exists
[ -f ${HOME}/.config/mpprc ] && . ${HOME}/.config/mpprc

usage() {
  printf "\nUsage: get-discogs-profile [-F] [-N] [-U] [-u username] [-t token] [-h]"
  printf "\nWhere:"
  printf "\n\t-F indicates force overwrite of previously generated files."
  printf "\n\t-N indicates do not use a Discogs API token."
  printf "\n\t-U indicates run an update, only newly added Discogs items will be processed."
  printf "\n\t-u 'username' specifies your Discogs username."
  printf "\n\t-t 'token' specifies your Discogs API token."
  printf "\n\t-h displays this usage message and exits.\n"
  printf "\nA Discogs username is required."
  printf "\nA Discogs username and token can be added to ~/.config/mpprc as the variables"
  printf "\n\tDISCOGS_USER and DISCOGS_TOKEN"
  printf "\nor specified on the command line with '-u username' and '-t token'\n"
  printf "\nUpdates can be accomplished either with the '-U' option or '-F' option."
  printf "\nAn update scenario is when 'discogs2markdown' has previously been run"
  printf "\nbut new items have been added to the Discogs collection since then."
  printf "\nUpdating with '-U' is faster as it does not generate markdown for existing items."
  printf "\nIf both '-F' and '-U' are provided, only '-F' is used.\n\n"
  exit 1
}

overwrite=
update=
usetoken=1
# Command line arguments override config file settings
while getopts "FNUu:t:h" flag; do
    case $flag in
        F)
            overwrite=1
            ;;
        N)
            usetoken=
            ;;
        U)
            update=1
            ;;
        u)
            DISCOGS_USER="$OPTARG"
            ;;
        t)
            DISCOGS_TOKEN="$OPTARG"
            ;;
        h)
            usage
            ;;
    esac
done
shift $(( OPTIND - 1 ))

[ "${usetoken}" ] || DISCOGS_TOKEN=
[ "${overwrite}" ] && update=

[ "${DISCOGS_USER}" ] || {
  echo "Discogs username required."
  echo "Set DISCOGS_USER in ${HOME}/.config/mpprc or on the command line."
  echo "Exiting."
  exit 1
}


# Set to the username of the Discogs collection to query
username="${DISCOGS_USER}"

# URL="https://api.discogs.com/releases"
URL="https://api.discogs.com"
USR="${URL}/users/${username}"
VAL="${URL}/users/${username}/collection/value"

AGE="github.com/doctorfree/MusicPlayerPlus"

[ -d json ] || mkdir json

# Retrieve user profile
profile=$(curl --stderr /dev/null \
  -A "${AGE}" "${USR}" \
  -H "Authorization: Discogs token=${DISCOGS_TOKEN}" | \
  jq -r '.')

echo "${profile}" > json/doctorfree-profile.json

avatar_url=`echo ${profile} | jq '.avatar_url' | sed -e "s/\"//g"`
wget -q -O "${username}_discogs_avatar.jpg" "${avatar_url}"
[ -f "${username}_discogs_avatar.jpg" ] && {
  convert "${username}_discogs_avatar.jpg" \
          "${username}_discogs_avatar.png" 2> /dev/null
}
rm -f ${username}_discogs_avatar.jpg

# Retrieve collection value fields
values=$(curl --stderr /dev/null \
  -A "${AGE}" "${VAL}" \
  -H "Authorization: Discogs token=${DISCOGS_TOKEN}" | \
  jq -r '.')

minimum=`echo ${values} | jq '.minimum' | sed -e "s/\"//g"`
median=`echo ${values} | jq '.median' | sed -e "s/\"//g"`
maximum=`echo ${values} | jq '.maximum' | sed -e "s/\"//g"`

filename="Discogs_User_Profile.md"
echo "# Discogs User Profile" > "${filename}"
echo "" >> "${filename}"
[ -f ${username}_discogs_avatar.png ] && {
  echo "![](assets/${username}_discogs_avatar.png)" >> "${filename}"
  echo "" >> "${filename}"
}
echo "" >> "${filename}"
echo "## Discogs user ${username} collection value" >> "${filename}"
echo "" >> "${filename}"
echo "| **Minimum** | **Median** | **Maximum** |" >> "${filename}"
echo "|-------------|------------|-------------|" >> "${filename}"
echo "| ${minimum} | ${median} | ${maximum} |" >> "${filename}"
echo "## Discogs user ${username} profile" >> "${filename}"
echo "" >> "${filename}"

id=`echo ${profile} | jq '.id' | sed -e "s/\"//g"`
uri=`echo ${profile} | jq '.uri' | sed -e "s/\"//g"`
name=`echo ${profile} | jq '.name' | sed -e "s/\"//g"`
home_page=`echo ${profile} | jq '.home_page' | sed -e "s/\"//g"`
location=`echo ${profile} | jq '.location' | sed -e "s/\"//g"`
desc=`echo ${profile} | jq '.profile' | sed -e "s/\"//g"`
num=`echo ${profile} | jq '.num_collection' | sed -e "s/\"//g"`
email=`echo ${profile} | jq '.email' | sed -e "s/\"//g"`
rank=`echo ${profile} | jq '.rank' | sed -e "s/\"//g"`
releases_contributed=`echo ${profile} | jq '.releases_contributed' | sed -e "s/\"//g"`
buyer_rating=`echo ${profile} | jq '.buyer_rating' | sed -e "s/\"//g"`
buyer_rating_stars=`echo ${profile} | jq '.buyer_rating_stars' | sed -e "s/\"//g"`
seller_rating=`echo ${profile} | jq '.seller_rating' | sed -e "s/\"//g"`
seller_rating_stars=`echo ${profile} | jq '.seller_rating_stars' | sed -e "s/\"//g"`

echo "Discogs user **${username}** has the following profile:" >> "${filename}"
echo "" >> "${filename}"
echo "${desc}" >> "${filename}"
echo "" >> "${filename}"
echo "- **Discogs ID:** ${id}" >> "${filename}"
echo "- **Discogs URL:** ${uri}" >> "${filename}"
echo "- **Name:** ${name}" >> "${filename}"
echo "- **Home Page:** ${home_page}" >> "${filename}"
echo "- **Location:** ${location}" >> "${filename}"
echo "- **Email:** ${email}" >> "${filename}"
echo "- **Number of items in Discogs collection:** ${num}" >> "${filename}"
echo "- **Discogs Rank:** ${rank}" >> "${filename}"
echo "- **Discogs Releases Contributed:** ${releases_contributed}" >> "${filename}"
echo "- **Discogs Buyer Rating:** ${buyer_rating}" >> "${filename}"
echo "- **Discogs Buyer Rating Stars:** ${buyer_rating_stars}" >> "${filename}"
echo "- **Discogs Seller Rating:** ${seller_rating}" >> "${filename}"
echo "- **Discogs Seller Rating Stars:** ${seller_rating_stars}" >> "${filename}"
echo "" >> "${filename}"

mv "${filename}" ../../..
[ -f ${username}_discogs_avatar.png ] && {
  mv ${username}_discogs_avatar.png \
     ../../../assets/${username}_discogs_avatar.png
}
