#!/bin/bash

TOP="${HOME}/Documents/Obsidian/Obsidian-Media-Vault/Books"

usage() {
  printf "\nUsage: mkbooks [-f] [-p /path/to/Books] [-t] [-u]"
  printf "\nWhere:"
  printf "\n\t-f indicates overwrite any pre-existing Books index markdown"
  printf "\n\t-p /path/to/Books specifies the full path to the Books folder"
  printf "\n\t(default: ${HOME}/Documents/Obsidian/Obsidian-Media-Vault/Books)"
  printf "\n\t-t indicates create a table rather than listing"
  printf "\n\t-u displays this usage message and exits\n\n"
  exit 1
}

mktable=
overwrite=
book_index="Books_by_Title"

while getopts "fp:tu" flag; do
    case $flag in
        f)
            overwrite=1
            ;;
        p)
            TOP="${OPTARG}"
            ;;
        t)
            mktable=1
            numcols=1
            book_index="Table_of_Books_by_Author"
            ;;
        u)
            usage
            ;;
    esac
done
shift $(( OPTIND - 1 ))

[ -d "${TOP}" ] || {
  echo "$TOP does not exist or is not a directory. Exiting."
  exit 1
}

cd "${TOP}"

[ "${overwrite}" ] && rm -f ../${book_index}.md

if [ -f ../${book_index}.md ]
then
  echo "${book_index}.md already exists. Use '-f' to overwrite an existing index."
  echo "Exiting without changes."
  exit 1
else
  echo "# Books" > ../${book_index}.md
  echo "" >> ../${book_index}.md
  if [ "${mktable}" ]
  then
    echo "## Table of Books by Author" >> ../${book_index}.md
  else
    echo "## Index of Books by Title" >> ../${book_index}.md
    echo "" >> ../${book_index}.md
    echo "| **[A](#a)** | **[B](#b)** | **[C](#c)** | **[D](#d)** | **[E](#e)** | **[F](#f)** | **[G](#g)** | **[H](#h)** | **[I](#i)** | **[J](#j)** | **[K](#k)** | **[L](#l)** | **[M](#m)** | **[N](#n)** | **[O](#o)** | **[P](#p)** | **[Q](#q)** | **[R](#r)** | **[S](#s)** | **[T](#t)** | **[U](#u)** | **[V](#v)** | **[W](#w)** | **[X](#x)** | **[Y](#y)** | **[Z](#z)** |" >> ../${book_index}.md
    echo "|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|--|" >> ../${book_index}.md
    echo "" >> ../${book_index}.md
  fi
  echo "" >> ../${book_index}.md
  if [ "${mktable}" ]
  then
    echo "| **Author: Title** | **Author: Title** | **Author: Title** | **Author: Title** | **Author: Title** |" >> ../${book_index}.md
    echo "|--|--|--|--|--|" >> ../${book_index}.md
  else
    heading="0-9"
    echo "### ${heading}" >> ../${book_index}.md
    echo "" >> ../${book_index}.md
  fi

  if [ "${mktable}" ]
  then
    for author in *
    do
      [ "${author}" == "*" ] && continue
      [ -d "${author}" ] || continue
      cd "${author}"
      authorname=
      for book in *.md
      do
        [ "${book}" == "*.md" ] && continue
        [ "${book}" == "${author}.md" ] && continue
        [ "${authorname}" ] || {
          authorname=`grep "author:" ${book} | head -1 | \
            awk -F ':' ' { print $2 } ' | sed -e 's/^ *//' -e 's/ *$//'`
        }
        title=`grep "title:" ${book} | awk -F ':' ' { print $2 } ' | \
          sed -e 's/^ *//' -e 's/ *$//' -e "s/^\"//" -e "s/\"$//"`
        if [ ${numcols} -gt 4 ]
        then
          printf "| ${authorname}: [${title}](Books/${author}/${book}) |\n" >> ../../${book_index}.md
          numcols=1
        else
          printf "| ${authorname}: [${title}](Books/${author}/${book}) " >> ../../${book_index}.md
          numcols=$((numcols+1))
        fi
      done
      cd ..
    done

    while [ ${numcols} -lt 5 ]
    do
      printf "| " >> ../${book_index}.md
      numcols=$((numcols+1))
    done
    printf "|\n" >> ../${book_index}.md
  else
    ls -1 */*.md | sort -k 2 -t'/' > /tmp/books$$
    while read book
    do
      author=`echo ${book} | awk -F '/' ' { print $1 } '`
      filename=`echo ${book} | awk -F '/' ' { print $2 } ' | sed -e "s/\.md//"`
      [ "${author}" == "${filename}" ] && continue
      authorname=`grep "author:" ${book} | head -1 | \
        awk -F ':' ' { print $2 } ' | sed -e 's/^ *//' -e 's/ *$//'`
      [ "${authorname}" ] || {
        echo "${book} needs an author: tag. Skipping."
        continue
      }
      title=`grep "title:" ${book} | awk -F ':' ' { print $2 } ' | \
        sed -e 's/^ *//' -e 's/ *$//' -e "s/^\"//" -e "s/\"$//"`
      [ "${title}" ] || {
        echo "${book} needs a title: tag. Skipping."
        continue
      }
      first=${title:0:1}
      if [ "${heading}" == "0-9" ]
      then
        [ "${first}" -eq "${first}" ] 2> /dev/null || {
          heading=${first}
          echo "" >> ../${book_index}.md
          echo "### ${heading}" >> ../${book_index}.md
          echo "" >> ../${book_index}.md
        }
      else
        [ "${first}" == "${heading}" ] || {
          heading=${first}
          echo "" >> ../${book_index}.md
          echo "### ${heading}" >> ../${book_index}.md
          echo "" >> ../${book_index}.md
        }
      fi
      echo "- [${title}](Books/${book}) by ${authorname}" >> ../${book_index}.md
    done < <(cat /tmp/books$$)
  fi
fi
