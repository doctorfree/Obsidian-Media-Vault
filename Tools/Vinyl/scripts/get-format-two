#!/bin/bash
#
# get-format-one
#
# Insert format metadata in all Vinyl albums
#
# The JSON returned from the Discogs API request looks like:
#
# "formats": [
#   {
#     "name": "Vinyl",
#     "qty": "1",
#     "text": "180 gram, Gatefold",
#     "descriptions": [
#       "LP",
#       "Album",
#       "Reissue"
#     ]
#   }
# ],

TOP="${HOME}/Documents/Obsidian/Obsidian-Media-Vault/Vinyl"
URL="https://api.discogs.com/releases"
AGE="github.com/doctorfree/MusicPlayerPlus"
UAG="--user-agent \"MusicPlayerPlus/3.0\""
token="CtvkGQluyminrZuarkmuFJZjXFEvUFpNDxkjNnVP"

[ -d "${TOP}" ] || {
  echo "$TOP does not exist or is not a directory. Exiting."
  exit 1
}

for artist in ${TOP}/*
do
  [ "${artist}" == "${TOP}/*" ] && continue
  [ -d "${artist}" ] || continue
  for album in "${artist}"/*.md
  do
    [ "${album}" == "${artist}/*.md" ] && continue
    grep "^format:" "${album}" > /dev/null && {
      release_id=`grep "releaseid:" "${album}"  | \
                  awk -F ':' ' { print $2 } ' | \
                  sed -e 's/^ *//' -e 's/ *$//'`
      [ "${release_id}" ] || continue
      foutput=`echo "${album}" | sed -e "s%\.md%%"`
      [ -s "${foutput}.txt" ] || {
        curl --stderr /dev/null \
          -A "${AGE}" "${URL}/${release_id}" \
          -H "Authorization: Discogs token=${token}" | \
          jq -r '.formats[]' | jq -r '.descriptions[]' > "${foutput}.txt"
        sleep 1
      }
      [ -s "${foutput}.txt" ] || {
        echo "Empty formats file ${foutput}.txt"
        rm -f "${foutput}.txt"
        continue
      }

      # Insert format data for this album
      # echo "Inserting format data for ${album}"
      currformat=`grep "^format:" "${album}"`
      newformat="${currformat}"
      formatlist=`grep -- "- Format:" "${album}"`
      newformatlist="${formatlist}"
      while read format
      do
        [ "${format}" == "null" ] && format=
        [ "${format}" ] || continue
        echo "${currformat}" | grep "${format}" > /dev/null || {
          existing=`echo "${newformat}" | awk -F ':' ' { print $2 } '`
          echo "${existing}" | grep ",$" > /dev/null && existing=
          if [ "${existing}" ]
          then
            newformat="${newformat}, ${format}"
            newformatlist="${newformatlist}, ${format}"
          else
            newformat="${newformat} ${format}"
            newformatlist="${newformatlist} ${format}"
          fi
        }
      done < <(/bin/cat "${foutput}.txt")
      [ -z "${newformat}" ] || {
        sed "/format:/c ${newformat}" "${album}" > /tmp/foo$$
      }
      [ -z "${newformatlist}" ] || {
        if [ -f /tmp/foo$$ ]
        then
          sed "/- Format:/c ${newformatlist}" /tmp/foo$$ > /tmp/bar$$
        else
          sed "/- Format:/c ${newformatlist}" "${album}" > /tmp/bar$$
        fi
      }
      if [ -f /tmp/bar$$ ]
      then
        cp /tmp/bar$$ ${album}
      else
        [ -f /tmp/foo$$ ] && cp /tmp/foo$$ "${album}"
      fi
      rm -f /tmp/bar$$ /tmp/foo$$ ${foutput}.txt
    }
  done
done
